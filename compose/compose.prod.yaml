services:
  mysql:
    image: mysql:8.0
    container_name: bt_mysql_prod
    restart: unless-stopped
    # Production env file (root .env expected to contain production secrets)
    # Load envs from repository root: production uses only .env
    env_file:
      - ../.env
    # environment variables for MySQL are provided via the referenced env_file
    volumes:
      - ../database:/docker-entrypoint-initdb.d:ro
      - backtest_db_data_prod:/var/lib/mysql
    ports:
      - "${MYSQL_HOST_PORT:-3307}:3306"
    networks:
      - backtest-net

  redis:
    image: redis:7-alpine
    container_name: bt_redis_prod
    ports:
      - "6379:6379"
    volumes:
      - backtest_redis_data_prod:/data
    networks:
      - backtest-net

  backtest_be_fast:
    build:
      context: ../backtest_be_fast
      dockerfile: Dockerfile
    image: backtest-be-fast:prod
    container_name: backtest_be_fast_prod
    networks:
      backtest-net:
        aliases:
          - backtest-be-spring
    depends_on:
      - mysql
    ports:
      - "8000:8000"
    env_file:
      - ../.env
    # In production use the built image; do not mount host source
    # volumes: (removed for prod to avoid running host source)
    command: ["python", "run_server.py"]

  backtest_be_spring:
    build:
      context: ../backtest_be_spring
      dockerfile: Dockerfile
    image: backtest-be-spring:prod
    container_name: backtest_be_spring_prod
    networks:
      backtest-net:
        aliases:
          - backtest-be-spring
    depends_on:
      - mysql
      - redis
    ports:
      - "8081:8080"
    env_file:
      - ../.env
    # Production envs are provided via ../.env (SPRING_DATASOURCE_*, VITE_API_BASE_URL, etc.)
    # Run the pre-built JAR from the image in production.
    # Do not mount the host source in production -> preserves image's built app.jar
    command: ["java", "-jar", "./app.jar"]

  backtest_fe:
    build:
      context: ../backtest_fe
      dockerfile: Dockerfile.dev
    image: backtest-fe:prod
    container_name: backtest_fe_prod
    networks:
      - backtest-net
    depends_on:
      - backtest_be_fast
      - backtest_be_spring
    ports:
      - "5173:5173"
    env_file:
      - ../.env
    # In production run the built frontend image; do not mount host source
    # volumes: (removed for prod to use built image)
    environment:
      - VITE_API_BASE_URL=${VITE_API_BASE_URL:-http://backtest-be-spring:8080/api}
      - API_PROXY_TARGET=${API_PROXY_TARGET:-http://backtest-be-spring:8080}
    # Serve the production build (image's default). Keep command minimal.
    command: ["npm", "run", "start"]

volumes:
  backtest_db_data_prod:
  backtest_redis_data_prod:

networks:
  backtest-net:
    name: backtest-network
