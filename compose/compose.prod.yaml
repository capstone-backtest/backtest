name: backtest-prod

services:
  backtest_be_fast:
    image: ghcr.io/capstone-backtest/backtest/backtest-be-fast:latest
    container_name: backtest_be_fast_prod
    restart: unless-stopped
    networks:
      - backtest-net
    ports:
      - "8000:8000"
    env_file:
      - ${BACKTEST_ENV_FILE:-../.env}
    environment:
      - DATABASE_HOST=host.docker.internal
      - DATABASE_PORT=3306
      - DEBUG=false
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  backtest_be_spring:
    image: ghcr.io/capstone-backtest/backtest/backtest-be-spring:latest
    container_name: backtest_be_spring_prod
    restart: unless-stopped
    networks:
      - backtest-net
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8082:8080"
    env_file:
      - ${BACKTEST_ENV_FILE:-../.env}
    environment:
      - SPRING_DATASOURCE_HOST=mysql
      - SPRING_DATASOURCE_PORT=3306
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/stock_community?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      - SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME:-root}
      - SPRING_DATASOURCE_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
      - SPRING_REDIS_PASSWORD=${REDIS_PASSWORD}
      - SPRING_PROFILES_ACTIVE=prod

  backtest_fe:
    image: ghcr.io/capstone-backtest/backtest/backtest-fe:latest
    container_name: backtest_fe_prod
    restart: unless-stopped
    networks:
      - backtest-net
    depends_on:
      backtest_be_fast:
        condition: service_healthy
      backtest_be_spring:
        condition: service_started
    ports:
      - "8083:80"
      - "8443:443"
    env_file:
      - ${BACKTEST_ENV_FILE:-../.env}

volumes:
  backtest_db_data_prod:
  backtest_redis_data_prod:

networks:
  backtest-net:
    name: backtest-network-prod
    driver: bridge
