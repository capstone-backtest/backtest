services:
  mysql:
    image: mysql:8.0
    container_name: bt_mysql_dev
    restart: unless-stopped
    networks:
      - backtest-net
    # Development uses root .env.local for overrides
    env_file:
      - ../.env.local
    volumes:
      - ../database:/docker-entrypoint-initdb.d:ro
      - backtest_db_data_dev:/var/lib/mysql
    ports:
      - "3307:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-uroot", "-prootpass"]
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 10s

  redis:
    image: redis:7-alpine
    container_name: bt_redis_dev
    ports:
      - "6379:6379"
    volumes:
      - backtest_redis_data_dev:/data
    networks:
      - backtest-net

  backtest_be_fast:
    build:
      context: ../backtest_be_fast
      dockerfile: Dockerfile
    image: backtest-be-fast:dev
    container_name: backtest_be_fast_dev
    networks:
      - backtest-net
    depends_on:
      mysql:
        condition: service_healthy
    ports:
      - "8000:8000"
    # Use root development env file for local overrides
    env_file:
      - ../.env.local
    volumes:
      - ../backtest_be_fast:/app
      - backtest_be_fast_venv:/opt/venv
  # Let the image ENTRYPOINT/CMD run (ensures venv is prepared by entrypoint)

  backtest_be_spring:
    build:
      context: ../backtest_be_spring
      dockerfile: Dockerfile.dev
    image: backtest-be-spring:dev
    container_name: backtest_be_spring_dev
    networks:
      backtest-net:
        aliases:
          - backtest-be-spring
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started
    ports:
      - "8081:8080"
    environment:
      - SPRING_DATASOURCE_HOST=mysql
      - SPRING_DATASOURCE_PORT=3306
      - SPRING_DATASOURCE_USERNAME=bt_user
      - SPRING_DATASOURCE_PASSWORD=bt_pass
      - SPRING_REDIS_HOST=redis
    # Development: mount host source to enable live reload with gradle bootRun
    volumes:
      - ../backtest_be_spring:/app
      - backtest_be_spring_gradle_cache:/home/gradle/.gradle
    command: ["./gradlew", "bootRun"]

  backtest_fe:
    build:
      context: ../backtest_fe
      dockerfile: Dockerfile.dev
    image: backtest-fe:dev
    container_name: backtest_fe_dev
    networks:
      - backtest-net
    depends_on:
      backtest_be_fast:
        condition: service_started
      backtest_be_spring:
        condition: service_started
    ports:
      - "5173:5173"
    volumes:
      - ../backtest_fe:/app
      - backtest_fe_node_modules:/app/node_modules
    environment:
      - VITE_API_BASE_URL=http://backtest-be-spring:8080/api
      - API_PROXY_TARGET=http://backtest-be-spring:8080
    command: ["npm", "run", "dev"]

volumes:
  backtest_db_data_dev:
  backtest_redis_data_dev:
  backtest_fe_node_modules:
  backtest_be_fast_venv:
  backtest_be_spring_gradle_cache:

networks:
  backtest-net:
    name: backtest-network
