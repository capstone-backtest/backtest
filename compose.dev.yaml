services:
  mysql:
    image: mysql:8.0
    container_name: bt_mysql_dev
    restart: unless-stopped
    command: ["--default-authentication-plugin=mysql_native_password"]
    networks:
      - backtest-net
    env_file:
      - .env
    volumes:
      - ./database:/docker-entrypoint-initdb.d:ro
      - backtest_db_data_dev:/var/lib/mysql
    ports:
      - "3307:3306"
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -uroot -p\"$$MYSQL_ROOT_PASSWORD\" >/dev/null 2>&1"]
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 10s

  redis:
    image: redis:7-alpine
    container_name: bt_redis_dev
    ports:
      - "6380:6379"
    env_file:
      - .env
    command: sh -c 'redis-server --requirepass "$$REDIS_PASSWORD"'
    volumes:
      - backtest_redis_data_dev:/data
    networks:
      - backtest-net
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -a \"$$REDIS_PASSWORD\" ping | grep PONG"]
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 10s

  backtest-be-fast:
    build:
      context: ./backtest_be_fast
      dockerfile: Dockerfile
    image: backtest-be-fast:dev
    container_name: backtest-be-fast-dev
    networks:
      - backtest-net
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      mysql:
        condition: service_healthy
    ports:
      - "8000:8000"
    env_file:
      - .env
    volumes:
      - ./backtest_be_fast:/app
      - backtest_be_fast_venv:/opt/venv
  backtest-fe:
    build:
      context: ./backtest_fe
      dockerfile: Dockerfile.dev
    image: backtest-fe:dev
    container_name: backtest-fe-dev
    networks:
      - backtest-net
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      backtest-be-fast:
        condition: service_started
      backtest-be-spring:
        condition: service_started
    ports:
      - "5173:5173"
    volumes:
      - ./backtest_fe:/app
      - backtest_fe_node_modules:/app/node_modules
    env_file:
      - .env
    environment:
      - "VITE_API_BASE_URL=${VITE_API_BASE_URL:-/api}"
      - "API_PROXY_TARGET=${API_PROXY_TARGET:-http://backtest-be-fast:8000}"
      - "SPRING_PROXY_TARGET=${SPRING_PROXY_TARGET:-http://backtest-be-spring:8080}"
      - "FASTAPI_PROXY_TARGET=${FASTAPI_PROXY_TARGET:-http://backtest-be-fast:8000}"
    command: ["npm", "run", "dev"]

  backtest-be-spring:
    build:
      context: ./backtest_be_spring
      dockerfile: Dockerfile.dev
    image: backtest-be-spring:dev
    container_name: backtest-be-spring-dev
    networks:
      - backtest-net
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8080:8080"
    env_file:
      - .env
    environment:
      - SPRING_DATASOURCE_HOST=mysql
      - SPRING_DATASOURCE_PORT=3306
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379

volumes:
  backtest_db_data_dev:
  backtest_redis_data_dev:
  backtest_fe_node_modules:
  backtest_be_fast_venv:
  backtest_be_spring_gradle_cache:

networks:
  backtest-net:
    name: backtest-network
